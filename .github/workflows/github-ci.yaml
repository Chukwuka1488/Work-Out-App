name: CI

on:
  push:
    branches:
      - main
    paths:
      - 'production/**'
      - 'staging/**'
      - 'development/**'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_BACKEND: chukwuka1488/nodejs-github-app
      DOCKER_IMAGE_FRONTEND: chukwuka1488/react-github-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Frontend Tests stage
      - name: Frontend Tests
        if: startsWith(github.ref, 'refs/heads/main')
        run: |
          if [ -d "production/frontend" ]; then
            cd production/frontend
          elif [ -d "staging/frontend" ]; then
            cd staging/frontend
          elif [ -d "development/frontend" ]; then
            cd development/frontend
          fi
          npm install

      # Backend Tests stage
      - name: Backend Tests
        if: startsWith(github.ref, 'refs/heads/main')
        run: |
          if [ -d "production/backend" ]; then
            cd production/backend
          elif [ -d "staging/backend" ]; then
            cd staging/backend
          elif [ -d "development/backend" ]; then
            cd development/backend
          fi
          npm install
          echo "MongoDB URI: ${MONGO_URI}"

      # Build Images stage
      - name: Build and Push Images
        if: startsWith(github.ref, 'refs/heads/main')
        run: |
          if [ -d "production/backend" ]; then
            docker build -t $DOCKER_IMAGE_BACKEND-production-$GITHUB_RUN_NUMBER ./production/backend
          elif [ -d "staging/backend" ]; then
            docker build -t $DOCKER_IMAGE_BACKEND-staging-$GITHUB_RUN_NUMBER ./staging/backend
          elif [ -d "development/backend" ]; then
            docker build -t $DOCKER_IMAGE_BACKEND-development-$GITHUB_RUN_NUMBER ./development/backend
          fi

          if [ -d "production/frontend" ]; then
            docker build -t $DOCKER_IMAGE_FRONTEND-production-$GITHUB_RUN_NUMBER ./production/frontend
          elif [ -d "staging/frontend" ]; then
            docker build -t $DOCKER_IMAGE_FRONTEND-staging-$GITHUB_RUN_NUMBER ./staging/frontend
          elif [ -d "development/frontend" ]; then
            docker build -t $DOCKER_IMAGE_FRONTEND-development-$GITHUB_RUN_NUMBER ./development/frontend
          fi

      # Push Images to DockerHub stage
      - name: Push Images to DockerHub
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push $DOCKER_IMAGE_BACKEND-production-$GITHUB_RUN_NUMBER
          docker push $DOCKER_IMAGE_BACKEND-staging-$GITHUB_RUN_NUMBER
          docker push $DOCKER_IMAGE_BACKEND-development-$GITHUB_RUN_NUMBER

          docker push $DOCKER_IMAGE_FRONTEND-production-$GITHUB_RUN_NUMBER
          docker push $DOCKER_IMAGE_FRONTEND-staging-$GITHUB_RUN_NUMBER
          docker push $DOCKER_IMAGE_FRONTEND-development-$GITHUB_RUN_NUMBER
      
      # Install Fluxctl
      - name: Install Fluxctl
        run: |
          curl -s https://fluxcd.io/install.sh | sudo bash
          fluxctl version
      
      # Update Flux CD Manifest stage
      - name: Update Flux CD Manifest
        run: |
          if [ -d "production/clusters/work-out-cluster" ]; then
            # Commands to update Flux CD for production
            fluxctl release --namespace=flux-system --update-image=$DOCKER_IMAGE_BACKEND-production-$GITHUB_RUN_NUMBER your-workload
            fluxctl release --namespace=flux-system --update-image=$DOCKER_IMAGE_FRONTEND-production-$GITHUB_RUN_NUMBER your-other-workload
          elif [ -d "staging/clusters/work-out-cluster" ]; then
            # Commands to update Flux CD for staging
            fluxctl release --namespace=flux-system --update-image=$DOCKER_IMAGE_BACKEND-staging-$GITHUB_RUN_NUMBER your-workload
            fluxctl release --namespace=flux-system --update-image=$DOCKER_IMAGE_FRONTEND-staging-$GITHUB_RUN_NUMBER your-other-workload
          elif [ -d "development/clusters/work-out-cluster" ]; then
            # Commands to update Flux CD for development
            fluxctl release --namespace=flux-system --update-image=$DOCKER_IMAGE_BACKEND-development-$GITHUB_RUN_NUMBER your-workload
            fluxctl release --namespace=flux-system --update-image=$DOCKER_IMAGE_FRONTEND-development-$GITHUB_RUN_NUMBER your-other-workload
          fi